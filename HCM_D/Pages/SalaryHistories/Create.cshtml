@page
@model HCM_D.Pages.SalaryHistories.CreateModel
@{
    ViewData["Title"] = Model.IsManager ? $"Create Salary Change - {Model.DepartmentName} Department" : "Create Salary Change";
    Layout = "~/Pages/Shared/_ModernLayout.cshtml";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    @if (Model.IsManager)
                    {
                        <h3 class="mb-2">
                            <i class="bi bi-currency-dollar me-2"></i>
                            @Model.DepartmentName Department
                        </h3>
                        <p class="text-muted mb-4">Create salary changes for employees in your department</p>
                    }
                    else
                    {
                        <h3 class="mb-4">
                            <i class="bi bi-currency-dollar me-2"></i>
                            Create Salary Change
                        </h3>
                    }

                    @if (Model.IsManager && !string.IsNullOrEmpty(Model.DepartmentName))
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle me-2"></i>
                            <strong>Manager Access:</strong> You can only create salary changes for employees in your department.
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <h6>Please correct the following errors:</h6>
                            <div asp-validation-summary="All" class="text-danger"></div>
                        </div>
                    }

                    <form method="post" id="salaryForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="SalaryHistory.EmployeeId" class="form-label">
                                        Employee *
                                        @if (Model.IsManager)
                                        {
                                            <small class="text-muted">(@Model.DepartmentName Department)</small>
                                        }
                                    </label>
                                    <select asp-for="SalaryHistory.EmployeeId" class="form-select" asp-items="Model.Employees" id="employeeSelect">
                                        <option value="">-- Select Employee --</option>
                                    </select>
                                    <span asp-validation-for="SalaryHistory.EmployeeId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="SalaryHistory.OldSalary" class="form-label">Current Salary</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="SalaryHistory.OldSalary" class="form-control bg-light" readonly id="oldSalaryInput" placeholder="Select an employee" />
                                    </div>
                                    <small class="form-text text-muted">Automatically filled based on selected employee</small>
                                    <span asp-validation-for="SalaryHistory.OldSalary" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="SalaryHistory.NewSalary" class="form-label">New Salary *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="SalaryHistory.NewSalary" class="form-control" placeholder="Enter new salary" min="0.01" step="0.01" />
                                    </div>
                                    <span asp-validation-for="SalaryHistory.NewSalary" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Changed By</label>
                                    <div class="form-control bg-light">
                                        <i class="bi bi-person me-2"></i>
                                        @Model.CurrentUserInfo
                                    </div>
                                    <small class="form-text text-muted">Automatically recorded</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-4">
                            <button type="submit" class="btn btn-primary me-2" id="submitBtn">
                                <i class="bi bi-check-lg me-1"></i>
                                Create Salary Change
                            </button>
                            <a asp-page="Index" class="btn btn-secondary">
                                <i class="bi bi-arrow-left me-1"></i>
                                Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const employeeSelect = document.getElementById('employeeSelect');
            const oldSalaryInput = document.getElementById('oldSalaryInput');
            
            employeeSelect.addEventListener('change', async function() {
                const employeeId = this.value;
                
                if (!employeeId) {
                    oldSalaryInput.value = '';
                    oldSalaryInput.placeholder = 'Select an employee';
                    return;
                }
                
                try {
                    const response = await fetch(`?handler=EmployeeSalary&employeeId=${employeeId}`);
                    
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    
                    const data = await response.json();
                    
                    if (data && data.salary !== undefined) {
                        oldSalaryInput.value = data.salary.toFixed(2);
                    } else {
                        oldSalaryInput.value = '';
                        oldSalaryInput.placeholder = 'Unable to retrieve salary';
                    }
                } catch (error) {
                    console.error('Error fetching employee salary:', error);
                    oldSalaryInput.value = '';
                    oldSalaryInput.placeholder = 'Error retrieving salary';
                    alert('Error retrieving employee salary. Please try again.');
                }
            });
        });
    </script>
}

<style>
    .form-control.bg-light {
        background-color: #f8f9fa !important;
        cursor: not-allowed;
    }
    
    .alert-danger {
        border-left: 4px solid #dc3545;
    }
</style>
